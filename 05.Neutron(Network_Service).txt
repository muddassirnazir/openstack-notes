Install neutron in Comtroller node :

#mysql -u root -p
CREATE DATABASE neutron;
GRANT ALL PRIVILEGES ON neutron.* TO 'neutron'@'localhost' IDENTIFIED BY 'password@123';
GRANT ALL PRIVILEGES ON neutron.* TO 'neutron'@'controller' IDENTIFIED BY 'password@123';
GRANT ALL PRIVILEGES ON neutron.* TO 'neutron'@'%' IDENTIFIED BY 'password@123';

#keystone user-create --name=neutron --pass=password@123 --email=username@domain.com
#keystone user-role-add --user=neutron --tenant=service --role=admin
#keystone service-create --name=neutron --type=network --description="OpenStack Networking"
#keystone endpoint-create --service-id $(keystone service-list | awk '/ network / {print $2}') --publicurl http://controller:9696 --adminurl http://controller:9696 --internalurl http://controller:9696 --region regionOne

Install package:

#apt-get install neutron-server neutron-plugin-ml2  python-neutronclient
#vi /etc/neutron/neutron.conf

[database]

connection = mysql://neutron:password@123@controller/neutron

[DEFAULT]

auth_strategy = keystone
#rpc_backend = neutron.openstack.common.rpc.impl_kombu
rpc_backend = rabbit
rabbit_host = controller
rabiit_password = password@123

core_plugin = ml2
service_plugins = router
allow_overlapping_ips = True

notify_nova_on_port_status_changes = True
notify_nova_on_port_data_changes = True
nova_url = http://controller:8774/v2
nova_admin_username = nova
nova_region_name = regionOne
# Replace the SERVICE_TENANT_ID with the output of this command (keystone tenant-list | awk '/ service / { print $2 }')
nova_admin_tenant_id = SERVICE_TENANT_ID
nova_admin_password = password@123
nova_admin_auth_url = http://controller:35357/v2.0

-------------------------------
#Also to get SERVICE_TENANT_ID

#source openrc.sh
#keystone tenant-get service

----------------------------

[keystone_authtoken]
auth_uri = http://controller:5000/v2.0
auth_host = controller
auth_port = 35357
auth_protocol = http
admin_tenant_name = service
admin_user = neutron
admin_password = password@123
-------------------------------

Configure the Modular Layer 2 (ML2) plug-in:

#vi /etc/neutron/plugins/ml2/ml2_conf.ini

[ml2]
type_drivers = gre
tenant_network_types = gre
mechanism_drivers = openvswitch

[ml2_type_gre]
tunnel_id_ranges = 1:1000

[securitygroup]
firewall_driver = neutron.agent.linux.iptables_firewall.OVSHybridIptablesFirewallDriver
enable_security_group = True

============================================

Configure Compute to use Networking:  

#vi /etc/nova/nova.conf

[DEFAULT]

network_api_class=nova.network.neutronv2.api.API

#libvirt_vif_driver=nova.virt.libvirt.vif.LibvirtHybridOVSBridgeDriver
linuxnet_interface_driver=nova.network.linux_net.LinuxOVSInterfaceDriver
firewall_driver=nova.virt.firewall.NoopFirewallDriver
security_group_api=neutron

[neutron]

url=http://controller:9696
auth_strategy=keystone
admin_auth_url=http://controller:35357/v2.0
admin_tenant_name=service
admin_username=neutron
admin_password=password@123


#neutron_url=http://controller:9696
#neutron_auth_strategy=keystone
#neutron_admin_tenant_name=service
#neutron_admin_username=neutron
#neutron_admin_password=password@123
#neutron_admin_auth_url=http://controller:35357/v2.0

----------------
Sync neutron database

----command

In controller node:

Restart the Compute services:

#service nova-api restart
#service nova-scheduler restart
#service nova-conductor restart

Restart the Networking service:

#service neutron-server restart

======================================================

Configure Network node:

Edit /etc/sysctl.conf to contain the following:

#vi /etc/sysctl.conf

net.ipv4.ip_forward=1
net.ipv4.conf.all.rp_filter=0
net.ipv4.conf.default.rp_filter=0

sysctl -p 
-------------------------

Install the Networking components:

#apt-get install -y neutron-plugin-ml2 neutron-plugin-openvswitch-agent  neutron-l3-agent neutron-dhcp-agent (openvswitch-datapath-dkms)

#vi /etc/neutron/neutron.conf

### Comment database connection in database section

[DEFAULT]

auth_strategy = keystone
rpc_backend = rabbit
rabbit_host = controller
rabiit_password = password@123

core_plugin = ml2
service_plugins = router
allow_overlapping_ips = True

[keystone_authtoken]
auth_uri = http://controller:5000/v2.0
auth_host = controller
auth_port = 35357
auth_protocol = http
admin_tenant_name = service
admin_user = neutron
admin_password = password@123
-----------------

#vi /etc/neutron/l3_agent.ini

[DEFAULT]
interface_driver = neutron.agent.linux.interface.OVSInterfaceDriver
use_namespaces = True
------------------------------

#vi /etc/neutron/dhcp_agent.ini

[DEFAULT]

interface_driver = neutron.agent.linux.interface.OVSInterfaceDriver
dhcp_driver = neutron.agent.linux.dhcp.Dnsmasq
use_namespaces = True
--------------------------------

#vi /etc/neutron/metadata_agent.ini

[DEFAULT]

auth_url = http://controller:5000/v2.0
auth_region = regionOne

admin_tenant_name = service
admin_user = neutron
admin_password = password@123
nova_metadata_ip = controller
metadata_proxy_shared_secret = helloOpenStack
======================================================

On the controller node:

#vi /etc/nova/nova.conf

[DEFAULT]

service_neutron_metadata_proxy = true
neutron_metadata_proxy_shared_secret = helloOpenStack

#service nova-api restart

==================================================

#vi /etc/neutron/plugins/ml2/ml2_conf.ini

[ml2]
type_drivers = gre
tenant_network_types = gre
mechanism_drivers = openvswitch

[ml2_type_gre]
tunnel_id_ranges = 1:1000

[ovs]
local_ip = 192.168.1.30
tunnel_type = gre
enable_tunneling = True

[securitygroup]

firewall_driver = neutron.agent.linux.iptables_firewall.OVSHybridIptablesFirewallDriver
enable_security_group = True
----------------------------

Restart openVSwitch:

#service openvswitch-switch restart
-------------------

Create the bridges:

#br-int will be used for VM integration
#ovs-vsctl add-br br-int


#br-ex is used to make to VM accessible from the internet
#ovs-vsctl add-br br-ex

Add the eth2 to the br-ex:

#Internet connectivity will be lost after this step but this won't affect OpenStack's work
#ovs-vsctl add-port br-ex eth2


Edit /etc/network/interfaces:

#vi /etc/network/interfaces

# The public network interface
auto eth2
iface eth2 inet manual
up ifconfig $IFACE 0.0.0.0 up
up ip link set $IFACE promisc on
down ip link set $IFACE promisc off
down ifconfig $IFACE down

auto br-ex
iface br-ex inet static
address 10.10.0.11
netmask 255.255.0.0
gateway 10.10.0.1
dns-nameservers 8.8.8.8

ifdown eth2 && ifup eth2

ifdown br-ex && ifup br-ex

Restart all neutron services:

#service neutron-plugin-openvswitch-agent restart
#service neutron-dhcp-agent restart
#service neutron-l3-agent restart
#service neutron-metadata-agent restart
#service dnsmasq restart

Check status:

#service neutron-plugin-openvswitch-agent status
#service neutron-dhcp-agent status
#service neutron-l3-agent status
#service neutron-metadata-agent status
#service dnsmasq status

reate a simple credential file:

#vi creds
#Paste the following:
export OS_TENANT_NAME=admin
export OS_USERNAME=admin
export OS_PASSWORD=admin_pass
export OS_AUTH_URL="http://192.168.100.11:5000/v2.0/"

Check Neutron agents:

#source creds
#neutron agent-list

=======================================================

Configure compute node:

Edit /etc/sysctl.conf to contain the following:

#vi /etc/sysctl.conf
net.ipv4.ip_forward=1
net.ipv4.conf.all.rp_filter=0
net.ipv4.conf.default.rp_filter=0
Implement the changes:

#sysctl -p

---------------------

Install the Networking components:

#apt-get install -y neutron-common neutron-plugin-ml2 neutron-plugin-openvswitch-agent openvswitch-datapath-dkms

#vi /etc/neutron/neutron.conf

[DEFAULT]

auth_strategy = keystone

core_plugin = ml2
service_plugins = router
allow_overlapping_ips = True

rpc_backend = rabbit
rabbit_host = controller
rabiit_password = password@123

[keystone_authtoken]
auth_uri = http://controller:5000/v2.0
auth_host = controller
auth_port = 35357
auth_protocol = http
admin_tenant_name = service
admin_user = neutron
admin_password = password@123

-----------------------------------------

#vi /etc/neutron/plugins/ml2/ml2_conf.ini

[ml2]
type_drivers = gre
tenant_network_types = gre
mechanism_drivers = openvswitch

[ml2_type_gre]
tunnel_id_ranges = 1:1000

[ovs]
local_ip = 192.168.1.20
tunnel_type = gre
enable_tunneling = True

[securitygroup]
firewall_driver = neutron.agent.linux.iptables_firewall.OVSHybridIptablesFirewallDriver
enable_security_group = True
----------------------

Restart the OVS service:

#service openvswitch-switch restart

Create the bridges:

#br-int will be used for VM integration
#ovs-vsctl add-br br-int


#vi /etc/nova/nova.conf

[DEFAULT]
network_api_class = nova.network.neutronv2.api.API
neutron_url = http://controller:9696
neutron_auth_strategy = keystone
neutron_admin_tenant_name = service
neutron_admin_username = neutron
neutron_admin_password = password@123
neutron_admin_auth_url = http://controller:35357/v2.0
linuxnet_interface_driver = nova.network.linux_net.LinuxOVSInterfaceDriver
firewall_driver = nova.virt.firewall.NoopFirewallDriver
security_group_api = neutron


-----------optional---
Edit /etc/nova/nova-compute.conf with the correct hypervisor type (set to qemu if using virtualbox for example, kvm is default)

#vi /etc/nova/nova-compute.conf

[DEFAULT]
compute_driver=libvirt.LibvirtDriver
[libvirt]
virt_type=qemu

-----------------------------

Restart nova-compute services:

#service nova-compute restart

Restart the Open vSwitch (OVS) agent:

#service neutron-plugin-openvswitch-agent restart

Check Nova is running. The :-) icons indicate that everything is ok !:

#nova-manage service list

==========================


#vi /etc/rabbitmq/rabbitmq.conf

[{rabbit, [{loopback_users, []}]}].
